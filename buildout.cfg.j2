############################################
#
# Buildout Configuration File for ZEO Plone
# -----------------------------------------
# $LastChangedDate: 2011-08-05 17:56:09 -0700 (Fri, 05 Aug 2011) $ $LastChangedRevision: 51540 $
#
# After making changes in this configuration file,
# you should run bin/buildout to update the components.
# 
# ALWAYS back up all Plone/Zope data and components
# before changing configuration.
# 
# Running "bin/buildout" will update your installation,
# installing missing components as necessary.
# 
# Use "bin/buildout -n" to update many components here to the newest
# available releases.
# This will update the add-on products you've added in the eggs= lines.
# This will not, however, upgrade Plone itself (or anything else you've
# pinned with a version specification). To upgrade Plone itself, see the
# comments in "Plone Component Versions".
#
# Tutorial instructions for using zc.buildout for
# configuration management are available at:
# http://plone.org/documentation/tutorial/buildout
# Full details at http://pypi.python.org/pypi/zc.buildout
#
############################################


[buildout]

############################################
# Plone Component Versions
# ------------------------
# This version of the Unified Installer has the components of Plone 4 
# preloaded so that it can install without an Internet connection.
# If you want to update, uncomment the "http://..." line below,
# edit it to point to the current version URL, comment out the 
# "versions.cfg" line and run "bin/buildout" while attached to the 
# Internet. Generally, you only want to do that as part of a planned migration.
# Note that if you are updating components, you should also check the versions
# section at the end of this file, since recipes or components other than
# those of Zope and Plone may need updating at the same time.
#

# Directory common to all deployments.
deployment-basedir = {{ deploymentdir }}

# Base directory for data of all deployments.
data-basedir = {{ datadir }}

# Place where this deployment keeps its data.
data-dir = ${buildout:data-basedir}/{{ item }}

extends = 
    base.cfg
    https://dist.plone.org/release/5.0.6/versions.cfg
    versions.cfg

# If you change your Plone version, you'll also need to update
# the repository below.
find-links +=
    https://dist.plone.org/release/5.0.6/

############################################
# Ports
# -----
# Specify the ports on which your Zope installation
# will listen.
# ZEO Server
zeo-address = ${buildout:data-dir}/var/zeosocket
# Zope client 1
http-address = {{ plone.deployments[item].zserver_address }}
# Additional clients:
debugger-address = {{ plone.deployments[item].debugger_address }}

# temporarily disabling the
# site-id = Rudd-O.com

# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = {{ process_user }}


############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include.
#
eggs =
    Plone
    Pillow
#   WANTED PRODUCTS versions pinned in versions.cfg
    Products.PloneFormGen
    Products.PloneKeywordManager
    Products.RedirectionTool
    Products.DocFinderTab
    plone.app.multilingual
    wildcard.fixpersistentutilities
    Products.PloneHotfix20160830
    Products.PloneHotfix20161129
#   DEVELOP-EGG VERSIONS
    plonetheme.clean_blog
    plone.app.layout
    ruddocom.policy [test]

# These are the eggs that will be tested.
test-eggs =
    ruddocom.policy

############################################
# Optional Functionality
# ----------------------
# Uncomment the indented lines to include these products.
# Documentation on all of them, along with many more products,
# is available at
# http://plone.org/products/
#
# Example products:
# * LinguaPlone provides tools for building multi-lingual sites
# * PloneFormGen provides through-the-web form building
#
#    Products.LinguaPlone==4.0.1
#    Products.PloneFormGen==1.6.0
#
# Note that versions may be specified here or in the [versions]
# section below. You should always specify versions that you know
# are compatible with the Plone release and at an acceptable
# development level.
#
# Commonly used development tools:
# Several excellent development tools are included in the develop.cfg
# buildout extension. Read it to learn how to activate these tools.


############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. Eggs with names beginning with "Products."
# usually don't need this.
zcml =

############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
    src/plonetheme.clean_blog
    src/ruddocom.policy
    src/plone.app.layout

############################################
# Debug Mode
# ----------
# Change debug-mode to "on" to run in development mode.
# 
debug-mode = off
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off


############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
# 
backups-dir=${buildout:data-dir}/backups


############################################
# Environment Variables
# ---------------------
# Some of the behavior of your Zope/Plone instances are controlled with OS
# environment variables. You may set those here in a key / value format.
# Some common settings:
#    * TZ allows you to set a time zone for systems where it's not
#      automatically available.
#    * zope_i18n_compile_mo_files allows for automatic compilation of
#      missing translation files (may slow startup).
#    * zope_i18n_allowed_languages allows you to limit the available
#      translations.
#    * PYTHON_EGG_CACHE determines where zipped python packages are unpacked
#      for use.
environment-vars =
    zope_i18n_compile_mo_files false
    PYTHON_EGG_CACHE ${buildout:directory}/.python-eggs
    PTS_LANGUAGES en es
    zope_i18n_allowed_languages en es
    #    TZ US/Eastern
    #    zope_i18n_allowed_languages en es de fr


############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial 
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already 
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl client1 adduser".
user=admin:password


############################################
# Parts Specification
# -------------------
# Specifies the components that should be included in the buildout.
# All the basics are in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts =
    zeoserver
    test
    client1
    debugger
    zopepy
    zopeskel
    unifiedinstaller
    backup
    precompile
    chown-zeo
#    temporarily disabling the 
#    plonesite

[precompile]
recipe = plone.recipe.precompiler
eggs = ${buildout:eggs}
compile-mo-files = true
